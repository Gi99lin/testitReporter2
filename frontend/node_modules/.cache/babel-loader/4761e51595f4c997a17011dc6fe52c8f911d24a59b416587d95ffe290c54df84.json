{"ast":null,"code":"var _jsxFileName = \"/Users/ivanakimkin/Projects/testItReports/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// @ts-nocheck\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!token);\n  const navigate = useNavigate();\n\n  // Check if user is admin\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'ADMIN';\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n\n  // Load user data if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/api/users/me');\n          setUser(response.data.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error loading user:', error);\n          logout();\n        }\n      }\n    };\n    loadUser();\n  }, [token]);\n\n  // Login function\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        token: newToken,\n        ...userData\n      } = response.data.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      setIsAuthenticated(true);\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Register function\n  const register = async (username, email, password) => {\n    try {\n      await axios.post('/api/auth/register', {\n        username,\n        email,\n        password\n      });\n      await login(username, password);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  // Update JWT token function (for authentication)\n  const updateToken = newToken => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n\n  // Update TestIT token function (only updates user's TestIT token, not JWT token)\n  const updateTestItToken = newTestItToken => {\n    if (user) {\n      // Update only the TestIT token in the user object\n      setUser({\n        ...user,\n        testitToken: newTestItToken\n      });\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isAdmin,\n    login,\n    logout,\n    register,\n    updateToken,\n    updateTestItToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"NjerYbyMNMiZEpsnMZxjgvo0YPM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useNavigate","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","navigate","isAdmin","role","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","eject","loadUser","response","get","data","console","logout","login","username","password","post","newToken","userData","setItem","removeItem","register","email","updateToken","updateTestItToken","newTestItToken","testitToken","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/ivanakimkin/Projects/testItReports/frontend/src/context/AuthContext.tsx"],"sourcesContent":["// @ts-nocheck\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Types\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  updateToken: (token: string) => void;\n  updateTestItToken: (token: string) => void;\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(!!token);\n  const navigate = useNavigate();\n\n  // Check if user is admin\n  const isAdmin = user?.role === 'ADMIN';\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n    };\n  }, [token]);\n\n  // Load user data if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (token) {\n        try {\n          const response = await axios.get('/api/users/me');\n          setUser(response.data.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error loading user:', error);\n          logout();\n        }\n      }\n    };\n\n    loadUser();\n  }, [token]);\n\n  // Login function\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await axios.post('/api/auth/login', { username, password });\n      const { token: newToken, ...userData } = response.data.data;\n      \n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  };\n\n  // Register function\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      await axios.post('/api/auth/register', { username, email, password });\n      await login(username, password);\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n\n  // Update JWT token function (for authentication)\n  const updateToken = (newToken: string) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n  };\n\n  // Update TestIT token function (only updates user's TestIT token, not JWT token)\n  const updateTestItToken = (newTestItToken: string) => {\n    if (user) {\n      // Update only the TestIT token in the user object\n      setUser({\n        ...user,\n        testitToken: newTestItToken\n      });\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    isAuthenticated,\n    isAdmin,\n    login,\n    logout,\n    register,\n    updateToken,\n    updateTestItToken,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}